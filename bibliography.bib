
@incollection{farhi_adding_2017,
	address = {Berkeley, CA},
	title = {Adding {State} {Management} with ngrx/store},
	isbn = {978-1-4842-2620-9},
	url = {https://doi.org/10.1007/978-1-4842-2620-9_3},
	abstract = {One of the most important aspects of software development is state management. With each development project, there’s some sort of tracking being done of data over time as well as of any updates made to that data.},
	language = {en},
	urldate = {2023-09-20},
	booktitle = {Reactive {Programming} with {Angular} and ngrx: {Learn} to {Harness} the {Power} of {Reactive} {Programming} with {RxJS} and ngrx {Extensions}},
	publisher = {Apress},
	author = {Farhi, Oren},
	editor = {Farhi, Oren},
	year = {2017},
	doi = {10.1007/978-1-4842-2620-9_3},
	keywords = {Action Creator, Action Object, Code Completion, Reducer Function, State Management},
	pages = {31--49},
	file = {Full Text PDF:/home/ricardo/Zotero/storage/IBWDIEED/Farhi - 2017 - Adding State Management with ngrxstore.pdf:application/pdf},
}

@article{saks_javascript_2019,
	title = {{JavaScript} frameworks: {Angular} vs {React} vs {Vue}},
	url = {https://www.theseus.fi/bitstream/handle/10024/261970/Thesis-Elar-Saks.pdf},
	language = {en},
	urldate = {2023-09-21},
	author = {Saks, Elar},
	year = {2019},
	file = {Saks - JavaScript frameworks Angular vs React vs Vue.pdf:/home/ricardo/Zotero/storage/I3GNUWGQ/Saks - JavaScript frameworks Angular vs React vs Vue.pdf:application/pdf},
}

@article{furukawa_web-based_2011,
	title = {Web-based {Control} {Application} using {WebSocket}},
	url = {https://accelconf.web.cern.ch/icalepcs2011/papers/wemau010.pdf},
	abstract = {The WebSocket [1] allows asynchronous full-duplex communication between a Web-based (i.e. JavaScriptbased) application and a Web-server. WebSocket started as a part of HTML5 standardization but has now been separated from HTML5 and has been developed independently. Using WebSocket, it becomes easy to develop platform independent presentation layer applications for accelerator and beamline control software. In addition, a Web browser is the only application program that needs to be installed on client computor. The WebSocket-based applications communicate with the WebSocket server using simple text-based messages, so WebSocket is applicable message-based control system like MADOCA, which was developed for the SPring-8 control system. A simple WebSocket server for the MADOCA control system and a simple motor control application were successfully made as a first trial of the WebSocket control application. Using Google-Chrome (version 13.0) on Debian/Linux and Windows 7, Opera (version 11.0) on Debian/Linux and Safari (version 5.0.3) on Mac OS X as clients, the motors can be controlled using a WebSocket-based Webapplication. Diffractometer control application use in synchrotron radiation diffraction experiment was also developed.},
	language = {en},
	urldate = {2023-09-22},
	author = {Furukawa, Y},
	year = {2011},
	file = {Furukawa - 2011 - Web-based Control Application using WebSocket.pdf:/home/ricardo/Zotero/storage/EQEIJM7S/Furukawa - 2011 - Web-based Control Application using WebSocket.pdf:application/pdf},
}

@inproceedings{qu_websocket-based_2019,
	address = {Cham},
	series = {Lecture {Notes} on {Data} {Engineering} and {Communications} {Technologies}},
	title = {{WebSocket}-{Based} {Real}-{Time} {Single}-{Page} {Application} {Development} {Framework}},
	isbn = {978-3-030-02607-3},
	doi = {10.1007/978-3-030-02607-3_4},
	abstract = {Main feature of WebSocket is to establish a persistent link between the client and the server, enabling them to perform full-duplex communication. This protocol can effectively address the communication issues within browsers. In many cases, the persistent link established by WebSocket is not fully utilized. In fact, WebSocket can also implement most of functions of the HTTP protocol, but it requires additional difficulty and workload. Besides, it lacks mature solutions and libraries. Therefore, we develop a WebSocket-based web application development framework that takes full advantage of the features and benefits of WebSocket, and combines the popular single-page application development model to allow developers to quickly develop efficient and reliable web applications based on our framework. Several experiments has been carried out and the results are presented to show the performance of the WebSocket framework.},
	language = {en},
	booktitle = {Advances on {P2P}, {Parallel}, {Grid}, {Cloud} and {Internet} {Computing}},
	publisher = {Springer International Publishing},
	author = {Qu, Hao and Ma, Kun},
	editor = {Xhafa, Fatos and Leu, Fang-Yie and Ficco, Massimo and Yang, Chao-Tung},
	year = {2019},
	keywords = {Full-duplex Communication, Jaycees, Message Parsing, Single Page Application, WebSocket},
	pages = {36--47},
	file = {Full Text PDF:/home/ricardo/Zotero/storage/H9MFHK3G/Qu et al. - 2019 - WebSocket-Based Real-Time Single-Page Application .pdf:application/pdf},
}

@article{mcfarlane_managing_2019,
	title = {Managing {State} in {React} {Appli}- cations with {Redux}},
	url = {https://www.theseus.fi/bitstream/handle/10024/265492/McFarlane_Timo.pdf},
	abstract = {This Bachelor’s thesis was commissioned by Visma Consulting Oy, a software company specialized in digital services, service design and custom software solutions. The results of this thesis study consist of a state management architecture designed and implemented for Visma Consulting Oy, and this study report.},
	language = {en},
	urldate = {2023-09-22},
	author = {McFarlane, Timo},
	year = {2019},
	file = {McFarlane - Managing State in React Appli- cations with Redux.pdf:/home/ricardo/Zotero/storage/ITBFST4Y/McFarlane - Managing State in React Appli- cations with Redux.pdf:application/pdf},
}

@article{tuomi_automated_2018,
	title = {Automated {Initialization} of {Web} {Software} {Projects}},
	url = {https://jan.systems/files/docs/kandi.pdf},
	abstract = {When starting a new web software project, it is beneﬁcial to minimize the time taken to initially conﬁgure the technologies. When such projects are started on a weekly basis, a common software project template becomes useful. This thesis researches methods to design such a template and describes the implementation of a working tool for initializing a new project. The project template contains a set of predeﬁned components for diﬀerent aspects of the continuous development pipeline. These components include conﬁguration ﬁles for a continuous integration pipeline, static analysis and a project skeleton for a front-end and back-end application, among many others.},
	language = {en},
	urldate = {2023-09-22},
	author = {Tuomi, Jan-Sebastian Verner},
	year = {2018},
	file = {Tuomi - Automated Initialization of Web Software Projects.pdf:/home/ricardo/Zotero/storage/CHZPNZCS/Tuomi - Automated Initialization of Web Software Projects.pdf:application/pdf},
}

@book{thakkar_building_2020,
	address = {Berkeley, CA},
	title = {Building {React} {Apps} with {Server}-{Side} {Rendering}: {Use} {React}, {Redux}, and {Next} to {Build} {Full} {Server}-{Side} {Rendering} {Applications}},
	isbn = {978-1-4842-5868-2},
	shorttitle = {Building {React} {Apps} with {Server}-{Side} {Rendering}},
	url = {http://link.springer.com/10.1007/978-1-4842-5869-9},
	language = {en},
	urldate = {2023-09-22},
	publisher = {Apress},
	author = {Thakkar, Mohit},
	year = {2020},
	doi = {10.1007/978-1-4842-5869-9},
	keywords = {async, asynchronous, front end development, next routing, next.js, react, redux, server-side javascript, server-side rendering},
	file = {Full Text PDF:/home/ricardo/Zotero/storage/QWGPHZSL/Thakkar - 2020 - Building React Apps with Server-Side Rendering Us.pdf:application/pdf},
}

@book{tanenbaum_verteilte_2008,
	address = {München Harlow Amsterdam Madrid Boston San Francisco Don Mills Mexico City Sydney},
	edition = {2., aktualisierte Auflage},
	series = {it-informatik},
	title = {Verteilte {Systeme}: {Prinzipien} und {Paradigmen}},
	isbn = {978-3-8273-7293-2},
	shorttitle = {Verteilte {Systeme}},
	language = {ger},
	publisher = {Pearson},
	author = {Tanenbaum, Andrew S. and Steen, Maarten van},
	year = {2008},
	annote = {Hier auch später erschienene, unveränderte Nachdrucke Auf dem Buchumschlag des Nachdrucks lautet die Auflagenbezeichnung: 3., aktual. Aufl. (Auf dem Titelblatt: 2., aktual. Aufl.)},
	file = {Table of Contents PDF:/home/ricardo/Zotero/storage/QN2W6Z5N/Tanenbaum and Steen - 2008 - Verteilte Systeme Prinzipien und Paradigmen.pdf:application/pdf},
}

@misc{haverbeke_collaborative_2015,
	title = {Collaborative {Editing} in {ProseMirror}},
	copyright = {CC By 3.0 Deed},
	url = {https://marijnhaverbeke.nl/blog/collaborative-editing.html},
	language = {en},
	urldate = {2023-10-04},
	author = {Haverbeke, Marijn},
	month = oct,
	year = {2015},
	file = {Collaborative Editing in ProseMirror:/home/ricardo/Zotero/storage/6CDDQGW4/collaborative-editing.html:text/html},
}

@book{hartmann_react_2020,
	address = {Heidelberg},
	edition = {2., überarbeitete und erweiterte Auflage},
	title = {React: {Grundlagen}, fortgeschrittene {Techniken} und {Praxistipps} - mit {TypeScript} und {Redux}},
	isbn = {978-3-86490-552-0},
	shorttitle = {React},
	language = {ger},
	publisher = {dpunkt.verlag},
	author = {Hartmann, Nils and Zeigermann, Oliver},
	year = {2020},
	file = {Table of Contents PDF:/home/ricardo/Zotero/storage/L7QHSVZE/Hartmann and Zeigermann - 2020 - React Grundlagen, fortgeschrittene Techniken und .pdf:application/pdf},
}

@book{bae_javascript_2019,
	address = {Berkeley, CA},
	title = {{JavaScript} {Data} {Structures} and {Algorithms}: {An} {Introduction} to {Understanding} and {Implementing} {Core} {Data} {Structure} and {Algorithm} {Fundamentals}},
	isbn = {978-1-4842-3988-9},
	shorttitle = {{JavaScript} {Data} {Structures} and {Algorithms}},
	url = {http://link.springer.com/10.1007/978-1-4842-3988-9},
	language = {en},
	urldate = {2024-01-03},
	publisher = {Apress},
	author = {Bae, Sammie},
	year = {2019},
	doi = {10.1007/978-1-4842-3988-9},
	file = {978-1-4842-3988-9.pdf:/home/ricardo/Zotero/storage/7EJP5MWE/978-1-4842-3988-9.pdf:application/pdf;Full Text:/home/ricardo/Zotero/storage/HRJXZN8S/Bae - 2019 - JavaScript Data Structures and Algorithms An Intr.pdf:application/pdf},
}

@book{freeman_entwurfsmuster_2021,
	title = {Entwurfsmuster von {Kopf} bis {Fuß}},
	isbn = {978-3-96010-503-9},
	url = {https://content.select.com/de/portal/media/view/603e7135-4b3c-4b0f-9357-05bfb0dd2d03},
	urldate = {2024-01-04},
	author = {Freeman, Eric and Robson, Elisabeth and Sierra, Kathy and Bates, Bert},
	month = nov,
	year = {2021},
	file = {Snapshot:/home/ricardo/Zotero/storage/VRG3S6IC/603e7135-4b3c-4b0f-9357-05bfb0dd2d03.html:text/html},
}

@book{ackermann_webentwicklung_2021,
	address = {Bonn, GERMANY},
	title = {Webentwicklung: {Das} {Handbuch} für {Fullstack}-{Entwickler}},
	isbn = {978-3-8362-6884-4},
	shorttitle = {Webentwicklung},
	url = {http://ebookcentral.proquest.com/lib/fuhagen-ebooks/detail.action?docID=6748877},
	abstract = {Der Fullstackentwickler ist DER Mythos unserer heutigen Zeit. Aber wer kann sich wirklich in allen Front- und Backendtechnologien auskennen und alle Programmiersprachen beherrschen? Sie werden feststellen: Darauf kommt es gar nicht an. Dieses Nachschlagewerk hilft Ihnen dabei, in der Flut aus Programmiersprachen, Technologien und Tools der Webentwicklung den Kopf über Wasser zu halten. Lernen Sie, welche Programmiersprache für Ihre individuellen Aufgaben die richtige ist und verstehen Sie die Zusammenhänge zwischen den verschiedenen Technologien. Von HTML, CSS und JavaScript, bis zu Webprotokollen, Webarchitektur u.v.m. Aus dem Inhalt: Web-Protokolle und Web-Formate verwenden Webseiten erstellen mit HTML, CSS und JavaScript Web Architekturen: MVC, MCP, MVVM, SOA, Microservices, Microfrontends Programmiersprachen und Web-Frameworks einsetzen Webservices implementieren: REST und GraphQL Datenbanken beherrschen: SQL und NoSQL Authentifizierungsmechanismen verstehen Webprojekte organisieren und verwalten Projektmanagement und Tools Inhaltsverzeichnis Geleitwort ... 17 Vorwort ... 19 1. Die Grundlagen verstehen ... 23 1.1 ... Begrifflichkeiten ... 23 1.2 ... Aufbau von Webapplikationen ... 26 1.3 ... Fullstack-Entwicklung ... 31 1.4 ... Tools für Fullstack-Entwickler ... 38 1.5 ... Zusammenfassung und Ausblick ... 45 2. Webseiten strukturieren mit HTML ... 47 2.1 ... Einführung ... 47 2.2 ... Die wichtigsten Elemente verwenden ... 52 2.3 ... Zusammenfassung und Ausblick ... 76 3. Webseiten gestalten mit CSS ... 79 3.1 ... Einführung ... 79 3.2 ... Farben und Textformatierungen anwenden ... 92 3.3 ... Listen und Tabellen ... 105 3.4 ... Die verschiedenen Layoutsysteme verstehen ... 116 3.5 ... Zusammenfassung und Ausblick ... 133 4. Webseiten interaktiv machen mit JavaScript ... 137 4.1 ... Einführung ... 138 4.2 ... Variablen, Konstanten, Datentypen und Operatoren ... 145 4.3 ... Kontrollstrukturen ... 149 4.4 ... Funktionen und Fehlerbehandlung ... 153 4.5 ... Objekte und Arrays ... 157 4.6 ... Zusammenfassung und Ausblick ... 160 5. Webprotokolle verwenden ... 163 5.1 ... Hypertext Transfer Protocol ... 163 5.2 ... Bidirektionale Kommunikation ... 182 5.3 ... Zusammenfassung und Ausblick ... 186 6. Webformate verwenden ... 189 6.1 ... Datenformate ... 189 6.2 ... Bildformate ... 201 6.3 ... Video- und Audioformate ... 209 6.4 ... Zusammenfassung und Ausblick ... 214 7. Web-APIs verwenden ... 217 7.1 ... Webseiten dynamisch ändern mit der DOM API ... 218 7.2 ... Daten asynchron laden mit Ajax und der Fetch API ... 229 7.3 ... Weitere Web-APIs ... 235 7.4 ... Zusammenfassung und Ausblick ... 240 8. Webseiten für Barrierefreiheit optimieren ... 243 8.1 ... Einführung ... 243 8.2 ... Bestandteile einer Webseite barrierefrei machen ... 250 8.3 ... Testen von Barrierefreiheit ... 270 8.4 ... Zusammenfassung und Ausblick ... 274 9. Single-Page-Applikationen implementieren ... 277 9.1 ... Einführung ... 277 9.2 ... Setup ... 280 9.3 ... Komponenten -- die Bausteine einer React-Applikation ... 284 9.4 ... Styling von Komponenten ... 289 9.5 ... Komponentenhierarchien ... 295 9.6 ... Formulare ... 299 9.7 ... Die Kontext-API ... 303 9.8 ... Routing ... 307 9.9 ... Zusammenfassung ... 310 10. Webarchitekturen verstehen und einsetzen ... 313 10.1 ... Schichtenarchitekturen ... 314 10.2 ... Monolithen und verteilte Architekturen ... 321 10.3 ... MV*-Architekturen ... 331 10.4 ... Zusammenfassung und Ausblick ... 336 11. Programmiersprachen auf der Serverseite verwenden ... 339 11.1 ... Arten von Programmiersprachen ... 340 11.2 ... Programmierparadigmen ... 344 11.3 ... Welche Programmiersprachen gibt es? ... 352 11.4 ... Zusammenfassung und Ausblick ... 364 12. JavaScript auf der Serverseite verwenden ... 367 12.1 ... JavaScript unter Node.js ... 367 12.2 ... Die eingebauten Module verwenden ... 379 12.3 ... Einen Webserver implementieren ... 383 12.4 ... Zusammenfassung und Ausblick ... 394 13. Webservices implementieren ... 397 13.1 ... Einführung ... 397 13.2 ... SOAP ... 399 13.3 ... REST ... 405 13.4 ... GraphQL ... 425 13.5 ... Zusammenfassung ... 430 14. Daten in Datenbanken speichern ... 433 14.1 ... Relationale Datenbanken ... 434 14.2 ... Nicht-relationale Datenbanken ... 457 14.3 ... Zusammenfassung ... 464 15. Webanwendungen testen ... 467 15.1 ... Automatisierte Tests ... 468 15.2 ... Testabdeckung ... 478 15.3 ... Test-Doubles ... 481 15.4 ... Zusammenfassung ... 486 16. Webanwendungen deployen und hosten ... 489 16.1 ... Einführung ... 489 16.2 ... Container Management ... 500 16.3 ... Zusammenfassung ... 513 17. Webanwendungen absichern ... 515 17.1 ... Sicherheitslücken ... 516 17.2 ... Verschlüsselung und Kryptografie ... 525 17.3 ... SOP, CSP und CORS ... 530 17.4 ... Authentifizierung ... 540 17.5 ... Zusammenfassung ... 544 18. Webprojekte organisieren und verwalten ... 547 18.1 ... Arten von Versionsverwaltungssystemen ... 548 18.2 ... Das Versionsverwaltungssystem Git ... 551 18.3 ... Zusammenfassung ... 565 19. Webprojekte managen ... 569 19.1 ... Klassisches Projektmanagement vs. agiles Projektmanagement ... 570 19.2 ... Agiles Projektmanagement mit Scrum ... 572 19.3 ... Zusammenfassung und Ausblick ... 584 Anhang ... 587 A ... HTTP ... 589 B ... HTML-Elemente ... 613 C ... Tools und Befehlsreferenzen ... 625 Schlusswort ... 639 Index ... 641 Rezension »Buchtipp!« (LINUX MAGAZIN) »Lesenswert ist das Buch für alle, die sich mit der Fullstack-Entwicklung beschäftigen möchten und auch beschäftigen und einen guten Überblick über alle Themen haben möchten, die für die Umsetzung einer vollwertigen Webapplikation von Bedeutung sind.« (the-webdeveloper.de) »Das Buch ist verständlich, gut strukturiert und beleuchtet das Thema Webentwicklung bzw. das Feld eines Fullstack-Entwicklers umfassend. Es vermittelt themenbezogen die jeweils wesentlichen Essenzen mit zahlreichen Abbildungen und nachvollziehbaren Code-Beispielen.« (Leserfeedback)},
	urldate = {2024-01-04},
	publisher = {Rheinwerk Verlag},
	author = {Ackermann, Philip},
	year = {2021},
	file = {ProQuest Ebook Snapshot:/home/ricardo/Zotero/storage/JGDBZWMY/detail.html:text/html},
}

@inproceedings{cacciagrano_synchronous_2001,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {On {Synchronous} and {Asynchronous} {Communication} {Paradigms}},
	isbn = {978-3-540-45446-5},
	doi = {10.1007/3-540-45446-2_16},
	abstract = {The π-calculus, its asynchronous version and Boudol’s mapping from the former language to the latter one are well-known mathematical objects in theoretical computer science. It is also well-known that the mappingi s not fully-abstract w.r.t. most of the semantics defined over these two languages.},
	language = {en},
	booktitle = {Theoretical {Computer} {Science}},
	publisher = {Springer},
	author = {Cacciagrano, Diletta and Corradini, Flavio},
	editor = {Restivo, Antonio and Della Rocca, Simona Ronchi and Roversi, Luca},
	year = {2001},
	keywords = {Asynchronous Communication, Commutative Monoid, Maximal Computation, Mobile Process, Operational Semantic},
	pages = {256--268},
	file = {Full Text PDF:/home/ricardo/Zotero/storage/EYG4ABJB/Cacciagrano and Corradini - 2001 - On Synchronous and Asynchronous Communication Para.pdf:application/pdf},
}

@misc{haverbeke_prosemirror_2024,
	title = {{ProseMirror} {Guide}},
	url = {https://prosemirror.net/docs/guide/#collab},
	urldate = {2024-02-07},
	author = {Haverbeke, Marijn},
	year = {2024},
	file = {ProseMirror Guide:/home/ricardo/Zotero/storage/LMFRYWLK/guide.html:text/html},
}
