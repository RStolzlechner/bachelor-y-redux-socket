
@incollection{farhi_adding_2017,
	address = {Berkeley, CA},
	title = {Adding {State} {Management} with ngrx/store},
	isbn = {978-1-4842-2620-9},
	url = {https://doi.org/10.1007/978-1-4842-2620-9_3},
	abstract = {One of the most important aspects of software development is state management. With each development project, there’s some sort of tracking being done of data over time as well as of any updates made to that data.},
	language = {en},
	urldate = {2023-09-20},
	booktitle = {Reactive {Programming} with {Angular} and ngrx: {Learn} to {Harness} the {Power} of {Reactive} {Programming} with {RxJS} and ngrx {Extensions}},
	publisher = {Apress},
	author = {Farhi, Oren},
	editor = {Farhi, Oren},
	year = {2017},
	doi = {10.1007/978-1-4842-2620-9_3},
	keywords = {Action Creator, Action Object, Code Completion, Reducer Function, State Management},
	pages = {31--49},
	file = {Full Text PDF:/home/ricardo/Zotero/storage/IBWDIEED/Farhi - 2017 - Adding State Management with ngrxstore.pdf:application/pdf},
}

@article{saks_javascript_2019,
	title = {{JavaScript} frameworks: {Angular} vs {React} vs {Vue}},
	url = {https://www.theseus.fi/bitstream/handle/10024/261970/Thesis-Elar-Saks.pdf},
	language = {en},
	urldate = {2023-09-21},
	author = {Saks, Elar},
	year = {2019},
	file = {Saks - JavaScript frameworks Angular vs React vs Vue.pdf:/home/ricardo/Zotero/storage/I3GNUWGQ/Saks - JavaScript frameworks Angular vs React vs Vue.pdf:application/pdf},
}

@article{furukawa_web-based_2011,
	title = {Web-based {Control} {Application} using {WebSocket}},
	url = {https://accelconf.web.cern.ch/icalepcs2011/papers/wemau010.pdf},
	abstract = {The WebSocket [1] allows asynchronous full-duplex communication between a Web-based (i.e. JavaScriptbased) application and a Web-server. WebSocket started as a part of HTML5 standardization but has now been separated from HTML5 and has been developed independently. Using WebSocket, it becomes easy to develop platform independent presentation layer applications for accelerator and beamline control software. In addition, a Web browser is the only application program that needs to be installed on client computor. The WebSocket-based applications communicate with the WebSocket server using simple text-based messages, so WebSocket is applicable message-based control system like MADOCA, which was developed for the SPring-8 control system. A simple WebSocket server for the MADOCA control system and a simple motor control application were successfully made as a first trial of the WebSocket control application. Using Google-Chrome (version 13.0) on Debian/Linux and Windows 7, Opera (version 11.0) on Debian/Linux and Safari (version 5.0.3) on Mac OS X as clients, the motors can be controlled using a WebSocket-based Webapplication. Diffractometer control application use in synchrotron radiation diffraction experiment was also developed.},
	language = {en},
	urldate = {2023-09-22},
	author = {Furukawa, Y},
	year = {2011},
	file = {Furukawa - 2011 - Web-based Control Application using WebSocket.pdf:/home/ricardo/Zotero/storage/EQEIJM7S/Furukawa - 2011 - Web-based Control Application using WebSocket.pdf:application/pdf},
}

@inproceedings{qu_websocket-based_2019,
	address = {Cham},
	series = {Lecture {Notes} on {Data} {Engineering} and {Communications} {Technologies}},
	title = {{WebSocket}-{Based} {Real}-{Time} {Single}-{Page} {Application} {Development} {Framework}},
	isbn = {978-3-030-02607-3},
	doi = {10.1007/978-3-030-02607-3_4},
	abstract = {Main feature of WebSocket is to establish a persistent link between the client and the server, enabling them to perform full-duplex communication. This protocol can effectively address the communication issues within browsers. In many cases, the persistent link established by WebSocket is not fully utilized. In fact, WebSocket can also implement most of functions of the HTTP protocol, but it requires additional difficulty and workload. Besides, it lacks mature solutions and libraries. Therefore, we develop a WebSocket-based web application development framework that takes full advantage of the features and benefits of WebSocket, and combines the popular single-page application development model to allow developers to quickly develop efficient and reliable web applications based on our framework. Several experiments has been carried out and the results are presented to show the performance of the WebSocket framework.},
	language = {en},
	booktitle = {Advances on {P2P}, {Parallel}, {Grid}, {Cloud} and {Internet} {Computing}},
	publisher = {Springer International Publishing},
	author = {Qu, Hao and Ma, Kun},
	editor = {Xhafa, Fatos and Leu, Fang-Yie and Ficco, Massimo and Yang, Chao-Tung},
	year = {2019},
	keywords = {Full-duplex Communication, Jaycees, Message Parsing, Single Page Application, WebSocket},
	pages = {36--47},
	file = {Full Text PDF:/home/ricardo/Zotero/storage/H9MFHK3G/Qu et al. - 2019 - WebSocket-Based Real-Time Single-Page Application .pdf:application/pdf},
}

@article{mcfarlane_managing_2019,
	title = {Managing {State} in {React} {Appli}- cations with {Redux}},
	url = {https://www.theseus.fi/bitstream/handle/10024/265492/McFarlane_Timo.pdf},
	abstract = {This Bachelor’s thesis was commissioned by Visma Consulting Oy, a software company specialized in digital services, service design and custom software solutions. The results of this thesis study consist of a state management architecture designed and implemented for Visma Consulting Oy, and this study report.},
	language = {en},
	urldate = {2023-09-22},
	author = {McFarlane, Timo},
	year = {2019},
	file = {McFarlane - Managing State in React Appli- cations with Redux.pdf:/home/ricardo/Zotero/storage/ITBFST4Y/McFarlane - Managing State in React Appli- cations with Redux.pdf:application/pdf},
}

@article{tuomi_automated_2018,
	title = {Automated {Initialization} of {Web} {Software} {Projects}},
	url = {https://jan.systems/files/docs/kandi.pdf},
	abstract = {When starting a new web software project, it is beneﬁcial to minimize the time taken to initially conﬁgure the technologies. When such projects are started on a weekly basis, a common software project template becomes useful. This thesis researches methods to design such a template and describes the implementation of a working tool for initializing a new project. The project template contains a set of predeﬁned components for diﬀerent aspects of the continuous development pipeline. These components include conﬁguration ﬁles for a continuous integration pipeline, static analysis and a project skeleton for a front-end and back-end application, among many others.},
	language = {en},
	urldate = {2023-09-22},
	author = {Tuomi, Jan-Sebastian Verner},
	year = {2018},
	file = {Tuomi - Automated Initialization of Web Software Projects.pdf:/home/ricardo/Zotero/storage/CHZPNZCS/Tuomi - Automated Initialization of Web Software Projects.pdf:application/pdf},
}

@book{thakkar_building_2020,
	address = {Berkeley, CA},
	title = {Building {React} {Apps} with {Server}-{Side} {Rendering}: {Use} {React}, {Redux}, and {Next} to {Build} {Full} {Server}-{Side} {Rendering} {Applications}},
	isbn = {978-1-4842-5868-2},
	shorttitle = {Building {React} {Apps} with {Server}-{Side} {Rendering}},
	url = {http://link.springer.com/10.1007/978-1-4842-5869-9},
	language = {en},
	urldate = {2023-09-22},
	publisher = {Apress},
	author = {Thakkar, Mohit},
	year = {2020},
	doi = {10.1007/978-1-4842-5869-9},
	keywords = {async, asynchronous, front end development, next routing, next.js, react, redux, server-side javascript, server-side rendering},
	file = {Full Text PDF:/home/ricardo/Zotero/storage/QWGPHZSL/Thakkar - 2020 - Building React Apps with Server-Side Rendering Us.pdf:application/pdf},
}

@book{tanenbaum_verteilte_2008,
	address = {München Harlow Amsterdam Madrid Boston San Francisco Don Mills Mexico City Sydney},
	edition = {2., aktualisierte Auflage},
	series = {it-informatik},
	title = {Verteilte {Systeme}: {Prinzipien} und {Paradigmen}},
	isbn = {978-3-8273-7293-2},
	shorttitle = {Verteilte {Systeme}},
	language = {ger},
	publisher = {Pearson},
	author = {Tanenbaum, Andrew S. and Steen, Maarten van},
	year = {2008},
	annote = {Hier auch später erschienene, unveränderte Nachdrucke Auf dem Buchumschlag des Nachdrucks lautet die Auflagenbezeichnung: 3., aktual. Aufl. (Auf dem Titelblatt: 2., aktual. Aufl.)},
	file = {Table of Contents PDF:/home/ricardo/Zotero/storage/QN2W6Z5N/Tanenbaum and Steen - 2008 - Verteilte Systeme Prinzipien und Paradigmen.pdf:application/pdf},
}

@misc{haverbeke_collaborative_2015,
	title = {Collaborative {Editing} in {ProseMirror}},
	copyright = {CC By 3.0 Deed},
	url = {https://marijnhaverbeke.nl/blog/collaborative-editing.html},
	language = {en},
	urldate = {2023-10-04},
	author = {Haverbeke, Marijn},
	month = oct,
	year = {2015},
	file = {Collaborative Editing in ProseMirror:/home/ricardo/Zotero/storage/6CDDQGW4/collaborative-editing.html:text/html},
}
